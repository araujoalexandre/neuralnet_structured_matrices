{%Â if cluster == "lsf"  %}
#BSUB -J {{job_name}}
#BSUB -gpu "num=4:mode=exclusive_process:mps=no:j_exclusive=yes"
#BSUB -n 1
#BSUB -R "span[ptile=1]"
#BSUB -W {{time}}
#BSUB -o {{projectdir}}/sample-%J.out
#BSUB -e {{projectdir}}/sample-%J.err

ml anaconda/py3 cudnn nccl
source activate tensorflow1.12-py3
export LD_LIBRARY_PATH={{ld_library}}
{% elif cluster == "slurm" -%}
#!{{bash_path}}
#SBATCH --account=ify@gpu
#SBATCH --job-name={{job_name}}
#SBATCH --output={{projectdir}}/sample-%j.out
#SBATCH --error={{projectdir}}/sample-%j.err
#SBATCH --time={{time}}
#SBATCH --partition={{partition}}
#SBATCH --nodes=1
#SBATCH --gres=gpu:{{n_gpus}}
#SBATCH --cpus-per-task={{cpu}}
{% if dependency %}
#SBATCH --dependency=afterany:{{dependency}}
{% endif -%}
module use /gpfslocalsup/pub/modules-idris/modulefiles/linux-rhel7-x86_64
module load git cuda/10.1.1 cudnn/10.1-v7.5.1.10 nccl/2.4.2-1+cuda10.1
{% if backend in ('tensorflow', 'tf') %}
module load tensorflow-gpu/py3/1.14
{% elif backend in ('pytorch', 'torch', 'py') %}
module load pytorch-gpu/py3/1.1
{% endif %}
{% else -%}
#!{{bash_path}}
{% endif %}
export CUDA_VISIBLE_DEVICES='{{gpu}}';
{%- if mode == "train" and not dependency %}
CONFIG_PATH={{projectdir}}/{{config_folder}}/{{config}}.yaml
TRAIN_DIR={{path}}/{{folder}}
LOGS_DIR={{path}}/{{folder}}_logs
mkdir $LOGS_DIR
cp $CONFIG_PATH $LOGS_DIR/model_flags.yaml
{% elif (mode == 'train' and dependency) or mode == "eval" or mode == "attack"  %}
TRAIN_DIR={{path}}/{{folder}}
LOGS_DIR={{path}}/{{folder}}_logs
CONFIG_PATH={{path}}/{{folder}}_logs/model_flags.yaml
{% endif -%}

{%- if cluster == "slurm" %}
  {%- if mode == "train" -%}
srun --output $LOGS_DIR/log_train.logs -u \
  --open-mode=append \
  --nodes=1 \
  --gres=gpu:{{n_gpus}} \
  --cpus-per-task={{cpu}} \
  python3 {{projectdir}}/src/{{file}}.py \
    --config_file=$CONFIG_PATH \
    --config_name=train \
    --train_dir=$TRAIN_DIR \
    --data_dir=$DATADIR \
    --backend={{backend}} \
    --start_new_model={{start_new_model}}
  {%- elif mode == "eval"  %}
srun --output $LOGS_DIR/log_eval.logs -u \
  --open-mode=append \
  --nodes=1 \
  --gres=gpu:{{n_gpus}} \
  --cpus-per-task={{cpu}} \
  python3 {{projectdir}}/src/{{file}}.py \
    --config_file=$CONFIG_PATH \
    --config_name=eval \
    --train_dir=$TRAIN_DIR \
    --data_dir=$DATADIR \
    --backend={{backend}}
  {%- elif mode == "attack" %}
srun --output  $LOGS_DIR/log_{{attack}}.logs -u \
  --open-mode=append \
  --nodes=1 \
  --gres=gpu:{n_gpus} \
  --cpus-per-task={{cpu}} \
  python3 {{projectdir}}/src/{{file}}.py \
    --config_file=$CONFIG_PATH \
    --config_name={{attack}} \
    --train_dir=$TRAIN_DIR \
    --data_dir=$DATADIR \
    --backend={{backend}}
  {% endif -%}
{%- elif cluster != "slurm" %}
  {%- if mode == "train" %}
python3 {{projectdir}}/src/{{file}}.py \
  --config_file=$CONFIG_PATH \
  --config_name=train \
  --train_dir=$TRAIN_DIR \
  --data_dir=$DATADIR \
  --start_new_model={{start_new_model}} \
  --backend={{backend}} \
  &>> $LOGS_DIR/log_train.logs
  {%- elif mode == "eval"  %}
python3 {{projectdir}}/src/{{file}}.py \
  --config_file=$CONFIG_PATH \
  --config_name=eval_test \
  --train_dir=$TRAIN_DIR \
  --data_dir=$DATADIR \
  --backend={{backend}} \
  &>> $LOGS_DIR/log_eval.logs
  {%- elif mode == "attack" %}
python3 {{projectdir}}/src/{{file}}.py \
  --config_file=$CONFIG_PATH \
  --config_name={{attack}} \
  --train_dir=$TRAIN_DIR \
  --data_dir=$DATADIR \
  --backend={{backend}} \
  &>> $LOGS_DIR/log_{{attack}}.logs
  {%- endif %}
{% endif %}


