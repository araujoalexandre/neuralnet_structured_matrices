#!/bin/bash

#BSUB -J training
#BSUB -gpu "num=4:mode=exclusive_process:mps=no:j_exclusive=yes"
#BSUB -n 1
#BSUB -R "span[ptile=1]"
#BSUB -W 1200
#BSUB -o /linkhome/rech/grpgen/ubx31mc/%J.train.out
#BSUB -e /linkhome/rech/grpgen/ubx31mc/%J.train.err

ml anaconda/py3 cudnn nccl
source activate tensorflow1.12-py3

export LD_LIBRARY_PATH=/pwrlocal/pub/openmpi/2.1.2/arch/gcc-4.8/lib:/pwrlocal/pub/cudnn/7.1.4/lib64:/pwrlocal/pub/nccl/2.2.13-1/lib:$LD_LIBRARY_PATH

CODE_PATH=$PROJECTDIR"/code"
CONFIG_PATH=$PROJECTDIR"/config/"{}

DATE=$(date '+%Y-%m-%d_%H.%M.%S').$(date +"%4N")
TRAIN_DIR=$WORKDIR"/models/"$DATE
LOGS_DIR=$WORKDIR"/models/"$DATE"_logs"
mkdir $LOGS_DIR
cp $CONFIG_PATH $LOGS_DIR"/model_flags.yaml"

export CUDA_VISIBLE_DEVICES='0,1'; 
python3 $CODE_PATH/train_under_attack.py \
	--config_file=$CONFIG_PATH \
	--config_name=train \
	--train_dir=$TRAIN_DIR \
        &>> $LOGS_DIR"/log_train.logs" &

export CUDA_VISIBLE_DEVICES='2,3';
python3 $CODE_PATH/eval.py \
	--config_file=$CONFIG_PATH \
	--config_name=eval_test \
	--train_dir=$TRAIN_DIR \
        &>> $LOGS_DIR"/log_eval_test.logs" &
wait

if {}; then
  for ATTACK in 'attack_pgd' 'attack_carlini' 
  do
    export CUDA_VISIBLE_DEVICES='0'; 
    python3 ${CODE_PATH}/eval.py \
            --config_file=$CONFIG_PATH \
    	    --config_name=$ATTACK \
    	    --train_dir=$TRAIN_DIR \
            &>> $LOGS_DIR"/log_"$ATTACK".logs" & 
    wait
  done
fi  
